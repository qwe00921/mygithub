// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `show.jce'
// **********************************************************************

package com.duowan.show;

public final class Message extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "show.Message";
    }

    public String fullClassName()
    {
        return "com.duowan.show.Message";
    }

    public int id = 0;

    public int noteType = 0;

    public String note = "";

    public int topicId = 0;

    public String commentId = "";

    public String img = "";

    public com.duowan.show.User author = null;

    public int time = 0;

    public int readStatus = 0;

    public int getId()
    {
        return id;
    }

    public void  setId(int id)
    {
        this.id = id;
    }

    public int getNoteType()
    {
        return noteType;
    }

    public void  setNoteType(int noteType)
    {
        this.noteType = noteType;
    }

    public String getNote()
    {
        return note;
    }

    public void  setNote(String note)
    {
        this.note = note;
    }

    public int getTopicId()
    {
        return topicId;
    }

    public void  setTopicId(int topicId)
    {
        this.topicId = topicId;
    }

    public String getCommentId()
    {
        return commentId;
    }

    public void  setCommentId(String commentId)
    {
        this.commentId = commentId;
    }

    public String getImg()
    {
        return img;
    }

    public void  setImg(String img)
    {
        this.img = img;
    }

    public com.duowan.show.User getAuthor()
    {
        return author;
    }

    public void  setAuthor(com.duowan.show.User author)
    {
        this.author = author;
    }

    public int getTime()
    {
        return time;
    }

    public void  setTime(int time)
    {
        this.time = time;
    }

    public int getReadStatus()
    {
        return readStatus;
    }

    public void  setReadStatus(int readStatus)
    {
        this.readStatus = readStatus;
    }

    public Message()
    {
        setId(id);
        setNoteType(noteType);
        setNote(note);
        setTopicId(topicId);
        setCommentId(commentId);
        setImg(img);
        setAuthor(author);
        setTime(time);
        setReadStatus(readStatus);
    }

    public Message(int id, int noteType, String note, int topicId, String commentId, String img, com.duowan.show.User author, int time, int readStatus)
    {
        setId(id);
        setNoteType(noteType);
        setNote(note);
        setTopicId(topicId);
        setCommentId(commentId);
        setImg(img);
        setAuthor(author);
        setTime(time);
        setReadStatus(readStatus);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        Message t = (Message) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(id, t.id) && 
            com.duowan.taf.jce.JceUtil.equals(noteType, t.noteType) && 
            com.duowan.taf.jce.JceUtil.equals(note, t.note) && 
            com.duowan.taf.jce.JceUtil.equals(topicId, t.topicId) && 
            com.duowan.taf.jce.JceUtil.equals(commentId, t.commentId) && 
            com.duowan.taf.jce.JceUtil.equals(img, t.img) && 
            com.duowan.taf.jce.JceUtil.equals(author, t.author) && 
            com.duowan.taf.jce.JceUtil.equals(time, t.time) && 
            com.duowan.taf.jce.JceUtil.equals(readStatus, t.readStatus) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        _os.write(id, 0);
        _os.write(noteType, 1);
        if (null != note)
        {
            _os.write(note, 2);
        }
        _os.write(topicId, 3);
        if (null != commentId)
        {
            _os.write(commentId, 4);
        }
        if (null != img)
        {
            _os.write(img, 5);
        }
        if (null != author)
        {
            _os.write(author, 6);
        }
        _os.write(time, 7);
        _os.write(readStatus, 8);
    }

    static com.duowan.show.User cache_author;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        setId((int) _is.read(id, 0, false));

        setNoteType((int) _is.read(noteType, 1, false));

        setNote( _is.readString(2, false));

        setTopicId((int) _is.read(topicId, 3, false));

        setCommentId( _is.readString(4, false));

        setImg( _is.readString(5, false));

        if(null == cache_author)
        {
            cache_author = new com.duowan.show.User();
        }
        setAuthor((com.duowan.show.User) _is.read(cache_author, 6, false));

        setTime((int) _is.read(time, 7, false));

        setReadStatus((int) _is.read(readStatus, 8, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(id, "id");
        _ds.display(noteType, "noteType");
        _ds.display(note, "note");
        _ds.display(topicId, "topicId");
        _ds.display(commentId, "commentId");
        _ds.display(img, "img");
        _ds.display(author, "author");
        _ds.display(time, "time");
        _ds.display(readStatus, "readStatus");
    }

}

