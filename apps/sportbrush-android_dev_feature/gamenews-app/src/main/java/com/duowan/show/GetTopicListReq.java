// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `show.jce'
// **********************************************************************

package com.duowan.show;

public final class GetTopicListReq extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "show.GetTopicListReq";
    }

    public String fullClassName()
    {
        return "com.duowan.show.GetTopicListReq";
    }

    public java.util.ArrayList<Integer> tagIdList = null;

    public int refreshType = 0;

    public String attachInfo = "";

    public java.util.ArrayList<Integer> getTagIdList()
    {
        return tagIdList;
    }

    public void  setTagIdList(java.util.ArrayList<Integer> tagIdList)
    {
        this.tagIdList = tagIdList;
    }

    public int getRefreshType()
    {
        return refreshType;
    }

    public void  setRefreshType(int refreshType)
    {
        this.refreshType = refreshType;
    }

    public String getAttachInfo()
    {
        return attachInfo;
    }

    public void  setAttachInfo(String attachInfo)
    {
        this.attachInfo = attachInfo;
    }

    public GetTopicListReq()
    {
        setTagIdList(tagIdList);
        setRefreshType(refreshType);
        setAttachInfo(attachInfo);
    }

    public GetTopicListReq(java.util.ArrayList<Integer> tagIdList, int refreshType, String attachInfo)
    {
        setTagIdList(tagIdList);
        setRefreshType(refreshType);
        setAttachInfo(attachInfo);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        GetTopicListReq t = (GetTopicListReq) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(tagIdList, t.tagIdList) && 
            com.duowan.taf.jce.JceUtil.equals(refreshType, t.refreshType) && 
            com.duowan.taf.jce.JceUtil.equals(attachInfo, t.attachInfo) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        if (null != tagIdList)
        {
            _os.write(tagIdList, 0);
        }
        _os.write(refreshType, 1);
        if (null != attachInfo)
        {
            _os.write(attachInfo, 2);
        }
    }

    static java.util.ArrayList<Integer> cache_tagIdList;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        if(null == cache_tagIdList)
        {
            cache_tagIdList = new java.util.ArrayList<Integer>();
            Integer __var_9 = 0;
            ((java.util.ArrayList<Integer>)cache_tagIdList).add(__var_9);
        }
        setTagIdList((java.util.ArrayList<Integer>) _is.read(cache_tagIdList, 0, false));

        setRefreshType((int) _is.read(refreshType, 1, false));

        setAttachInfo( _is.readString(2, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(tagIdList, "tagIdList");
        _ds.display(refreshType, "refreshType");
        _ds.display(attachInfo, "attachInfo");
    }

}

