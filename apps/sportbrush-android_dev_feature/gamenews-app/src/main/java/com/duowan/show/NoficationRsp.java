// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `show.jce'
// **********************************************************************

package com.duowan.show;

public final class NoficationRsp extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "show.NoficationRsp";
    }

    public String fullClassName()
    {
        return "com.duowan.show.NoficationRsp";
    }

    public java.util.ArrayList<com.duowan.show.Message> noteList = null;

    public int unreadCount = 0;

    public boolean hasMore = true;

    public java.util.ArrayList<com.duowan.show.Message> getNoteList()
    {
        return noteList;
    }

    public void  setNoteList(java.util.ArrayList<com.duowan.show.Message> noteList)
    {
        this.noteList = noteList;
    }

    public int getUnreadCount()
    {
        return unreadCount;
    }

    public void  setUnreadCount(int unreadCount)
    {
        this.unreadCount = unreadCount;
    }

    public boolean getHasMore()
    {
        return hasMore;
    }

    public void  setHasMore(boolean hasMore)
    {
        this.hasMore = hasMore;
    }

    public NoficationRsp()
    {
        setNoteList(noteList);
        setUnreadCount(unreadCount);
        setHasMore(hasMore);
    }

    public NoficationRsp(java.util.ArrayList<com.duowan.show.Message> noteList, int unreadCount, boolean hasMore)
    {
        setNoteList(noteList);
        setUnreadCount(unreadCount);
        setHasMore(hasMore);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        NoficationRsp t = (NoficationRsp) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(noteList, t.noteList) && 
            com.duowan.taf.jce.JceUtil.equals(unreadCount, t.unreadCount) && 
            com.duowan.taf.jce.JceUtil.equals(hasMore, t.hasMore) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        if (null != noteList)
        {
            _os.write(noteList, 0);
        }
        _os.write(unreadCount, 1);
        _os.write(hasMore, 2);
    }

    static java.util.ArrayList<com.duowan.show.Message> cache_noteList;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        if(null == cache_noteList)
        {
            cache_noteList = new java.util.ArrayList<com.duowan.show.Message>();
            com.duowan.show.Message __var_14 = new com.duowan.show.Message();
            ((java.util.ArrayList<com.duowan.show.Message>)cache_noteList).add(__var_14);
        }
        setNoteList((java.util.ArrayList<com.duowan.show.Message>) _is.read(cache_noteList, 0, false));

        setUnreadCount((int) _is.read(unreadCount, 1, false));

        setHasMore((boolean) _is.read(hasMore, 2, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(noteList, "noteList");
        _ds.display(unreadCount, "unreadCount");
        _ds.display(hasMore, "hasMore");
    }

}

