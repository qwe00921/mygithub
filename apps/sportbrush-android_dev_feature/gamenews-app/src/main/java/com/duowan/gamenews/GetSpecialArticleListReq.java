// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `gamenews.jce'
// **********************************************************************

package com.duowan.gamenews;

public final class GetSpecialArticleListReq extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "gamenews.GetSpecialArticleListReq";
    }

    public String fullClassName()
    {
        return "com.duowan.gamenews.GetSpecialArticleListReq";
    }

    public long specialId = 0;

    public int refreshType = 0;

    public java.util.Map<Integer, String> attachInfo = null;

    public int count = 0;

    public long getSpecialId()
    {
        return specialId;
    }

    public void  setSpecialId(long specialId)
    {
        this.specialId = specialId;
    }

    public int getRefreshType()
    {
        return refreshType;
    }

    public void  setRefreshType(int refreshType)
    {
        this.refreshType = refreshType;
    }

    public java.util.Map<Integer, String> getAttachInfo()
    {
        return attachInfo;
    }

    public void  setAttachInfo(java.util.Map<Integer, String> attachInfo)
    {
        this.attachInfo = attachInfo;
    }

    public int getCount()
    {
        return count;
    }

    public void  setCount(int count)
    {
        this.count = count;
    }

    public GetSpecialArticleListReq()
    {
        setSpecialId(specialId);
        setRefreshType(refreshType);
        setAttachInfo(attachInfo);
        setCount(count);
    }

    public GetSpecialArticleListReq(long specialId, int refreshType, java.util.Map<Integer, String> attachInfo, int count)
    {
        setSpecialId(specialId);
        setRefreshType(refreshType);
        setAttachInfo(attachInfo);
        setCount(count);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        GetSpecialArticleListReq t = (GetSpecialArticleListReq) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(specialId, t.specialId) && 
            com.duowan.taf.jce.JceUtil.equals(refreshType, t.refreshType) && 
            com.duowan.taf.jce.JceUtil.equals(attachInfo, t.attachInfo) && 
            com.duowan.taf.jce.JceUtil.equals(count, t.count) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        _os.write(specialId, 0);
        _os.write(refreshType, 1);
        if (null != attachInfo)
        {
            _os.write(attachInfo, 2);
        }
        _os.write(count, 3);
    }

    static java.util.Map<Integer, String> cache_attachInfo;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        setSpecialId((long) _is.read(specialId, 0, false));

        setRefreshType((int) _is.read(refreshType, 1, false));

        if(null == cache_attachInfo)
        {
            cache_attachInfo = new java.util.HashMap<Integer, String>();
            Integer __var_37 = 0;
            String __var_38 = "";
            cache_attachInfo.put(__var_37, __var_38);
        }
        setAttachInfo((java.util.Map<Integer, String>) _is.read(cache_attachInfo, 2, false));

        setCount((int) _is.read(count, 3, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(specialId, "specialId");
        _ds.display(refreshType, "refreshType");
        _ds.display(attachInfo, "attachInfo");
        _ds.display(count, "count");
    }

}

