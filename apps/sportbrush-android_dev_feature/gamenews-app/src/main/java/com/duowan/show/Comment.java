// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `show.jce'
// **********************************************************************

package com.duowan.show;

public final class Comment extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "show.Comment";
    }

    public String fullClassName()
    {
        return "com.duowan.show.Comment";
    }

    public com.duowan.show.BaseComment comment = null;

    public com.duowan.show.BaseComment replyComment = null;

    public com.duowan.show.BaseComment getComment()
    {
        return comment;
    }

    public void  setComment(com.duowan.show.BaseComment comment)
    {
        this.comment = comment;
    }

    public com.duowan.show.BaseComment getReplyComment()
    {
        return replyComment;
    }

    public void  setReplyComment(com.duowan.show.BaseComment replyComment)
    {
        this.replyComment = replyComment;
    }

    public Comment()
    {
        setComment(comment);
        setReplyComment(replyComment);
    }

    public Comment(com.duowan.show.BaseComment comment, com.duowan.show.BaseComment replyComment)
    {
        setComment(comment);
        setReplyComment(replyComment);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        Comment t = (Comment) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(comment, t.comment) && 
            com.duowan.taf.jce.JceUtil.equals(replyComment, t.replyComment) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        if (null != comment)
        {
            _os.write(comment, 0);
        }
        if (null != replyComment)
        {
            _os.write(replyComment, 1);
        }
    }

    static com.duowan.show.BaseComment cache_comment;
    static com.duowan.show.BaseComment cache_replyComment;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        if(null == cache_comment)
        {
            cache_comment = new com.duowan.show.BaseComment();
        }
        setComment((com.duowan.show.BaseComment) _is.read(cache_comment, 0, false));

        if(null == cache_replyComment)
        {
            cache_replyComment = new com.duowan.show.BaseComment();
        }
        setReplyComment((com.duowan.show.BaseComment) _is.read(cache_replyComment, 1, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(comment, "comment");
        _ds.display(replyComment, "replyComment");
    }

}

