// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.5.5
// Generated from `show.jce'
// **********************************************************************

package com.duowan.show;

public final class GetCommentListRsp extends com.duowan.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "show.GetCommentListRsp";
    }

    public String fullClassName()
    {
        return "com.duowan.show.GetCommentListRsp";
    }

    public java.util.ArrayList<com.duowan.show.Comment> commentList = null;

    public String attachInfo = "";

    public boolean hasMore = true;

    public java.util.ArrayList<com.duowan.show.Comment> getCommentList()
    {
        return commentList;
    }

    public void  setCommentList(java.util.ArrayList<com.duowan.show.Comment> commentList)
    {
        this.commentList = commentList;
    }

    public String getAttachInfo()
    {
        return attachInfo;
    }

    public void  setAttachInfo(String attachInfo)
    {
        this.attachInfo = attachInfo;
    }

    public boolean getHasMore()
    {
        return hasMore;
    }

    public void  setHasMore(boolean hasMore)
    {
        this.hasMore = hasMore;
    }

    public GetCommentListRsp()
    {
        setCommentList(commentList);
        setAttachInfo(attachInfo);
        setHasMore(hasMore);
    }

    public GetCommentListRsp(java.util.ArrayList<com.duowan.show.Comment> commentList, String attachInfo, boolean hasMore)
    {
        setCommentList(commentList);
        setAttachInfo(attachInfo);
        setHasMore(hasMore);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        GetCommentListRsp t = (GetCommentListRsp) o;
        return (
            com.duowan.taf.jce.JceUtil.equals(commentList, t.commentList) && 
            com.duowan.taf.jce.JceUtil.equals(attachInfo, t.attachInfo) && 
            com.duowan.taf.jce.JceUtil.equals(hasMore, t.hasMore) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.duowan.taf.jce.JceOutputStream _os)
    {
        if (null != commentList)
        {
            _os.write(commentList, 0);
        }
        if (null != attachInfo)
        {
            _os.write(attachInfo, 1);
        }
        _os.write(hasMore, 2);
    }

    static java.util.ArrayList<com.duowan.show.Comment> cache_commentList;

    public void readFrom(com.duowan.taf.jce.JceInputStream _is)
    {
        if(null == cache_commentList)
        {
            cache_commentList = new java.util.ArrayList<com.duowan.show.Comment>();
            com.duowan.show.Comment __var_11 = new com.duowan.show.Comment();
            ((java.util.ArrayList<com.duowan.show.Comment>)cache_commentList).add(__var_11);
        }
        setCommentList((java.util.ArrayList<com.duowan.show.Comment>) _is.read(cache_commentList, 0, false));

        setAttachInfo( _is.readString(1, false));

        setHasMore((boolean) _is.read(hasMore, 2, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.duowan.taf.jce.JceDisplayer _ds = new com.duowan.taf.jce.JceDisplayer(_os, _level);
        _ds.display(commentList, "commentList");
        _ds.display(attachInfo, "attachInfo");
        _ds.display(hasMore, "hasMore");
    }

}

